* {
    box-sizing: border-box;
}
body {
    margin: 0px;
    font-family: sans-serif;
}

#header, #footer {
    width: 100vw;
}

#header {
    background-image: url(../images/hero3.jpg);
    background-size: cover;
    background-position: center;
    height: 100vh;
    display: flex;
    justify-content: center;
    padding-top: 100px;
}
.hero-content h1 {
    font-size: 4rem;
    font-weight: bold;
    margin: 0px;
}
.hero-content h3 {
    margin: 15px 0px 30px;
    font-size: 1.5rem;
}
.hero-content a {
    display: inline-block;
    background-color: #00be06;
    color: #fff;
    text-decoration: none;
    text-align: center;
    padding: 10px 20px;
    font-size: 1.25rem;
}

/*
    Let's target and center our #main and give it a width of 80vw, a max-width of 1000px, and a margin of 0px auto.
*/
#main {
    width: 80vw;
    max-width: 1000px;
    margin: 0px auto;
}

/*
    We'll also center the h2 with a text-align of center.
*/
#main h2 {
    text-align: center;
    font-size: 3rem;
}

/*
    Now, we'll design our 12 image cropped gallery that we want
    to have 3 columns on desktop screens, 2 columns on tablet screens,
    and 1 column on mobile screens.

    So to start, we'll give it a display of grid.
    Then we'll apply a grid-template-columns with 3 columns,
    each of them 1fr.
    We will also apply a grid-auto-rows of 350px and a gap of
    25px.
*/
#main .gallery {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-auto-rows: 350px;
    gap: 25px;
}
/* 
    To fit our images in their grid spaces, we'll give them a width
    and height of 100% along with a object-fit of cover.
*/
.gallery img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}