* {
    box-sizing: border-box;
}
body {
    margin: 0px;
    font-family: sans-serif;
}

#header, #footer {
    width: 100vw;
}

#header {
    background-image: url(../images/hero.jpg);
    background-size: cover;
    background-position: center;
    height: 100vh;
    display: flex;
    justify-content: center;
    padding-top: 100px;
}
.hero-content {
    width: 80vw;
    max-width: 1000px;
    margin: 0px auto;
}
.hero-content h1 {
    font-size: 4rem;
    font-weight: bold;
    margin: 0px;
}
.hero-content h3 {
    margin: 15px 0px 30px;
    font-size: 1.5rem;
}
.hero-content a {
    display: inline-block;
    background-color: #00be06;
    color: #fff;
    text-decoration: none;
    text-align: center;
    padding: 10px 20px;
    font-size: 1.25rem;
}

#main .promotion {
    width: 80vw;
    max-width: 1000px;
    margin: 25px auto;
    height: 50vh;
    display: flex;
    gap: 25px;
    align-items: center;
}
.promotion .img-container {
    height: 100%;
    flex: 1;
}
.promotion img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
.promotion .content {
    flex: 1;
}

/*
    Now, let's target #main .cards and give
    it a display of flex and height of 50vh.

    We're going to aim for a nice side by side
    full viewport width look.
*/
#main .cards {
    display: flex;
    height: 50vh;
}

/*
    Then we'll target the .card and design our cards by giving
    them a flex of 1, color of white, display of flex and a
    flex direction of column.

    We'll finish their shared styles off by adding an align-items
    and justify-content of center.
*/
.cards .card {
    flex: 1;
    color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/* 
    Now let's target our individual cards, starting with the #card-1
    
    We're going to give it a background. For this, we'll be combining
    two functions, the linear gradient and the url function, to create
    background images with overlays.

    We'll first start with the linear-gradient() function. In the
    parenthesis, we want to have it to top, rgba(0, 0, 0, 0.7),
    rgba(0, 0, 0, 0.7). This will create the same color stop across the
    gradient with the same opacity.

    We can then add a comma at the end of our linear-gradient() and add
    url(../images/pie.jpg) to add in our image.

    With our image and overlay in, let's also add background-position
    of center and a background-size of cover.
*/
#card-1 {
    background: linear-gradient(to top, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(../images/pie.jpg);
    background-position: center;
    background-size: cover;
}
/*
    We'll do the same as above for #card-2, this time changing the url
    for our image to get a different image.
*/
#card-2 {
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url(../images/three-drinks.jpg);
    background-position: center;
    background-size: cover;
}

/*
    To wrap up our main section, lets target our anchor elements
    under .card and .promotion. We'll be giving them the same styles.

    Let's add a display of inline-block, a background-color, a font
    color, remove the text decoration, add a padding of 10px on the
    top and bottom and 20px on the left and right, and then we'll
    align the text center.
*/
.cards a, .promotion a {
    display: inline-block;
    background-color: #00be06;
    color: #fff;
    text-decoration: none;
    padding: 10px 20px;
    text-align: center;
}
/*
    We can also target our .promotion a on it's own and
    give it a display of block so it expands the full width
    of it's container.
*/
.promotion a {
    display: block;
}
/*
    Now let's move on to designing our footer.
*/
