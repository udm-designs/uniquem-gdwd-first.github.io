* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
main {
    width: 90vw;
    max-width: 800px;
    margin: 0 auto;
}
h3 {
    text-align: center;
    margin: 24px 0;
}

#two-column {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.card {
    margin: 0 25px 25px 0;
    width: calc(50% - 25px);
    border: 1.5px solid #ffe4da;
    border-radius: 5px;
    padding: 10px;
    box-shadow: -3px 3px 10px #ddd;
    background: linear-gradient(-50deg, #ffdbdb,#fff7f7, #ffc9c9);
}
/*
    There's a few ways we can fix our previous issue above but we're going to utilize the nth-of-type pseudo-class for our fix.

    We'll first target our .card and the attach a :nth-of-type() to it without any spaces. In the parenthesis, we want to target each even card and remove the right margin from it. To do that, we can put 2n or even inside the parenthesis. 2n means every second card and even means every even card. They're not always interchangeable as the number value before the n can be any number, even or odd.

    Now, let's add a margin-right property and set it's value to 0px.

    Now our cards no longer have unequal spacing on their outer edges. Let's head to the html and add some more cards now.
*/
.card:nth-of-type(2n) {
    margin-right: 0px;
}
.card img {
    width: 100%;
    height: 150px;
    object-fit: cover;
}
.card h2 {
    font-size: 36px;
    margin-top: 10px;
}
.card p {
    font-family: sans-serif;
    font-size: 18px;
    margin: 15px 0;
}

.anchor-btn {
    display: block;
    background-color: lightcoral;
    color: black;
    text-decoration: none;
    font-weight: bold;
    font-size: 20px;
    text-align: center;
    padding: 10px;
    border: 3px solid lightcoral;
    transition:
        background-color .5s,
        color .5s;
}
.anchor-btn:hover {
    background-color: transparent;
    color: lightcoral;
}