* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
main {
    width: 90vw;
    max-width: 800px;
    margin: 0 auto;
}
h3 {
    text-align: center;
    margin: 24px 0;
}

#two-column {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.card {
    width: 50%;
}
.card img {
    width: 100%;
    height: 150px;
    object-fit: cover;
}
.card h2 {
    font-size: 36px;
    margin-top: 10px;
}
.card p {
    font-family: sans-serif;
    font-size: 18px;
    margin: 15px 0;
}

.anchor-btn {
    display: block;
    background-color: lightcoral;
    color: black;
    text-decoration: none;
    font-weight: bold;
    font-size: 20px;
    text-align: center;
    padding: 10px;
    /*
        To fix the first issue, let's add the border property and value to our default anchor-btn's state. This will allow the 3px of border width to have already been present, thus removing the shift in height.
    */
    border: 3px solid lightcoral;
    /*
        For the second issue, let's use the transition property. The transition property is shorthand for transition-property, transition-duration, transition-timing-function, and transition-delay. It allows us to create smooth transitions between the different states of elements.

        For now, we're going to add background-color as the property we want to transition and then have it transition in .5 seconds. We'll add a comma to target an additional property and add the color property and have it transition in .5s as well.

        This will create a smooth transition for the property that are being changed on hover.
    */
    transition:
        background-color .5s,
        color .5s;
}
.anchor-btn:hover {
    background-color: transparent;
    color: lightcoral;
    /*
        We'll remove the border properties from this selector and move it to the main selector for this element above. 
    */
}
/*
    Now that our button is all fleshed out, let's add some additional styling to the card.
*/